// ARQUIVO: cliente-update.component.ts
import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router'; // ðŸ‘ˆ Importar ActivatedRoute
import { ClienteService } from '../cliente.service';
import { Cliente } from '../cliente.model';
import { Contato } from '../contato.model'; 
import { Endereco } from '../endereco.model'; 

@Component({
Â  selector: 'app-cliente-update',
Â  templateUrl: './cliente-update.component.html',
Â  styleUrls: ['./cliente-update.component.css']
})
export class ClienteUpdateComponent implements OnInit {

Â  cliente: Cliente = {
Â  Â  // InicializaÃ§Ã£o padrÃ£o (serÃ¡ preenchida pelo readById)
Â  Â  cliId: '', nome: '', cpf: '', rg: '', dataNascimento: '', sexo: '', observacoes: '',
Â  Â  contato: {} as Contato,
Â  Â  endereco: {} as Endereco
Â  };
  
Â  constructor(
Â  Â  private clienteService: ClienteService, 
Â  Â  private router: Router,
Â  Â  private route: ActivatedRoute // ðŸ‘ˆ Injetar ActivatedRoute
Â  ) { }

Â  ngOnInit(): void {
Â  Â  // 1. Obter o 'id' da URL
Â  Â  const id = this.route.snapshot.paramMap.get('id');

Â  Â  // 2. Chamar o serviÃ§o para carregar os dados
Â  Â  if (id) {
Â  Â  Â  this.clienteService.readById(id).subscribe(cliente => {
Â  Â  Â  Â  this.cliente = cliente;
        
        // CORREÃ‡ÃƒO DE DATA:
        // O campo dataNascimento Ã© uma string no formato "yyyy-MM-dd" que
        // precisa ser formatado para o <input type="date"> aceitar.
        if (this.cliente.dataNascimento) {
            // O backend deve retornar no formato ISO (yyyy-MM-dd), se nÃ£o, 
            // vocÃª precisarÃ¡ fazer uma formataÃ§Ã£o extra. Assumiremos que estÃ¡ correto.
            this.cliente.dataNascimento = this.cliente.dataNascimento.substring(0, 10);
        }
Â  Â  Â  });
Â  Â  } else {
      this.router.navigate(['/clientes']); // Se nÃ£o tiver ID, volta para a lista
    }
Â  }

Â  updateCliente(): void {
Â  Â  this.clienteService.update(this.cliente).subscribe({
Â  Â  Â  next: () => {
Â  Â  Â  Â  this.clienteService.showMessage('Cliente atualizado com sucesso!');
Â  Â  Â  Â  this.router.navigate(['/clientes']);
Â  Â  Â  },
Â  Â  Â  error: (e: any) => { 
Â  Â  Â  Â  // Erro Ã© tratado no service
Â  Â  Â  }
Â  Â  });
Â  }

Â  cancel(): void {
Â  Â  this.router.navigate(['/clientes']);
Â  }
}